[{"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx":"1","D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx":"2","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx":"3","D:\\project_javascript\\nuber-eats-frontend\\src\\index.tsx":"4","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\header.tsx":"5","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"6","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\404.tsx":"7","D:\\project_javascript\\nuber-eats-frontend\\src\\hooks\\useMe.tsx":"8","D:\\project_javascript\\nuber-eats-frontend\\src\\fragments.ts":"9","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\form-error.tsx":"10","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\search.tsx":"11","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"12","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\button.tsx":"13","D:\\project_javascript\\nuber-eats-frontend\\src\\constants.ts":"14","D:\\project_javascript\\nuber-eats-frontend\\src\\apollo.ts":"15","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"16","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\category.tsx":"17","D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx":"18","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"19","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"20","D:\\project_javascript\\nuber-eats-frontend\\src\\reportWebVitals.ts":"21","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\add-dish.tsx":"22","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurant.tsx":"23","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\restaurant.tsx":"24","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\login.tsx":"25","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\dish.tsx":"26","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\dish-option.tsx":"27","D:\\project_javascript\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"28"},{"size":1752,"mtime":1615765054971,"results":"29","hashOfConfig":"30"},{"size":2642,"mtime":1616454941801,"results":"31","hashOfConfig":"30"},{"size":4828,"mtime":1615936537678,"results":"32","hashOfConfig":"30"},{"size":770,"mtime":1613690735085,"results":"33","hashOfConfig":"30"},{"size":1054,"mtime":1614901300008,"results":"34","hashOfConfig":"30"},{"size":4349,"mtime":1613603509598,"results":"35","hashOfConfig":"30"},{"size":644,"mtime":1613517341071,"results":"36","hashOfConfig":"30"},{"size":305,"mtime":1613951097421,"results":"37","hashOfConfig":"30"},{"size":1005,"mtime":1616368525350,"results":"38","hashOfConfig":"30"},{"size":285,"mtime":1614123692957,"results":"39","hashOfConfig":"30"},{"size":1564,"mtime":1613518476186,"results":"40","hashOfConfig":"30"},{"size":3614,"mtime":1613517330402,"results":"41","hashOfConfig":"30"},{"size":566,"mtime":1614210032025,"results":"42","hashOfConfig":"30"},{"size":44,"mtime":1614294956804,"results":"43","hashOfConfig":"30"},{"size":1532,"mtime":1614901190603,"results":"44","hashOfConfig":"30"},{"size":4599,"mtime":1614640887879,"results":"45","hashOfConfig":"30"},{"size":1224,"mtime":1613603606876,"results":"46","hashOfConfig":"30"},{"size":594,"mtime":1613690601161,"results":"47","hashOfConfig":"30"},{"size":2560,"mtime":1613517334088,"results":"48","hashOfConfig":"30"},{"size":6978,"mtime":1616974828717,"results":"49","hashOfConfig":"30"},{"size":425,"mtime":1611290805718,"results":"50","hashOfConfig":"30"},{"size":5123,"mtime":1616023815974,"results":"51","hashOfConfig":"30"},{"size":3963,"mtime":1616369810246,"results":"52","hashOfConfig":"30"},{"size":730,"mtime":1616455011816,"results":"53","hashOfConfig":"30"},{"size":4650,"mtime":1614901163888,"results":"54","hashOfConfig":"30"},{"size":1970,"mtime":1616716522365,"results":"55","hashOfConfig":"30"},{"size":886,"mtime":1616715910508,"results":"56","hashOfConfig":"30"},{"size":1985,"mtime":1616974802550,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"r4q80p",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx",["129","130"],"import { gql, useApolloClient, useQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Restaurant } from \"../../components/restaurant\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { myRestaurants } from \"../../__generated__/myRestaurants\";\r\n\r\nexport const MY_RESTAURANTS_QUERY = gql`\r\n  query myRestaurants {\r\n    myRestaurants {\r\n      ok\r\n      error\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const MyRestaurants = () => {\r\n  const { data } = useQuery<myRestaurants>(MY_RESTAURANTS_QUERY);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>My Restaurants | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"max-w-screen-2xl mx-auto mt-32\">\r\n        <h2 className=\"text-4xl font-medium mb-10\">My Restaurants</h2>\r\n        {data?.myRestaurants.ok &&\r\n        data.myRestaurants.restaurants.length === 0 ? (\r\n          <>\r\n            <h4 className=\"text-xl mb-5\">You have no restaurants.</h4>\r\n            <Link className=\"link\" to=\"/add-restaurant\">\r\n              Create one &rarr;\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\r\n            {data?.myRestaurants.restaurants?.map((restaurant) => (\r\n              <Restaurant\r\n                key={restaurant.id}\r\n                id={restaurant.id + \"\"}\r\n                coverImg={restaurant.coverImg}\r\n                name={restaurant.name}\r\n                categoryName={restaurant.category?.name}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",["131","132"],"D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx",["133","134","135","136"],"D:\\project_javascript\\nuber-eats-frontend\\src\\index.tsx",[],["137","138"],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\header.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\404.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\hooks\\useMe.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\fragments.ts",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\search.tsx",["139","140"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  searchRestaurant,\r\n  searchRestaurantVariables,\r\n} from \"../../__generated__/searchRestaurant\";\r\n\r\nconst SEARCH_RESTAURANT = gql`\r\n  query searchRestaurant($input: SearchRestaurantInput!) {\r\n    searchRestaurant(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const Search = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [callQuery, { loading, data, called }] = useLazyQuery<\r\n    searchRestaurant,\r\n    searchRestaurantVariables\r\n  >(SEARCH_RESTAURANT);\r\n\r\n  useEffect(() => {\r\n    const [_, query] = location.search.split(\"?term=\");\r\n    if (!query) {\r\n      //history.push(\"/\");\r\n      //push와 다르게 replace는 history에 기록을 남기지 않음. 현재 페이지를 그냥 새로운 페이지로 대체해버림\r\n      return history.replace(\"/\");\r\n    }\r\n    callQuery({\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          query,\r\n        },\r\n      },\r\n    });\r\n  }, [history, location]);\r\n\r\n  console.log(loading, data, called);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Search | Nuber Eats</title>\r\n      </Helmet>\r\n      <h1>Search Page</h1>\r\n    </div>\r\n  );\r\n};\r\n",["141","142"],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",["143","144","145","146"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"../../components/button\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  editProfile,\r\n  editProfileVariables,\r\n} from \"../../__generated__/editProfile\";\r\n\r\nconst EDIT_PROFILE_MUTATION = gql`\r\n  mutation editProfile($input: EditProfileInput!) {\r\n    editProfile(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\ninterface IFormProps {\r\n  email?: string;\r\n  password?: string;\r\n}\r\n\r\nexport const EditProfile = () => {\r\n  const { data: userData, refetch: refreshUser } = useMe();\r\n  const client = useApolloClient();\r\n\r\n  const onCompleted = async (data: editProfile) => {\r\n    const {\r\n      editProfile: { error, ok },\r\n    } = data;\r\n\r\n    if (ok && userData) {\r\n      //await refreshUser();\r\n      //속도를 위해 Refetch대신 Fragment 사용하였음\r\n      const {\r\n        me: { email: prevEmail, id },\r\n      } = userData;\r\n      const { email: newEmail } = getValues();\r\n\r\n      if (prevEmail !== newEmail) {\r\n        //update the cache\r\n        /*\r\n        write data to cache directly through 'writeFragment'\r\n        fragment는 type의 일종임\r\n        id를 가지고 cache에 있는 fragment를 찾을 수 있음\r\n\r\n        아래 구문은 type이 User인 fragment중 id 가 User:${userData.me.id}인 것을 찾고\r\n        찾은 fragment의 데이터중 email을 바꾸는 내용임\r\n\r\n        (Chrome의 개발자 도구중 Apollo탭에서 cache로 가면 fragment들을 볼 수 있음)\r\n      */\r\n        client.writeFragment({\r\n          id: `User:${id}`,\r\n          fragment: gql`\r\n            fragment EditedUser on User {\r\n              verified\r\n              email\r\n            }\r\n          `,\r\n          data: {\r\n            verified: false,\r\n            email: newEmail,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const [editProfile, { loading }] = useMutation<\r\n    editProfile,\r\n    editProfileVariables\r\n  >(EDIT_PROFILE_MUTATION, {\r\n    onCompleted,\r\n  });\r\n\r\n  const { register, handleSubmit, getValues, formState } = useForm<IFormProps>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      email: userData?.me.email,\r\n    },\r\n  });\r\n  const onSubmit = () => {\r\n    const { email, password } = getValues();\r\n\r\n    editProfile({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          ...(password !== \"\" && { password }),\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-52 flex flex-col justify-center items-center\">\r\n      <Helmet>\r\n        <title>Edit Profile | Nuber Eats</title>\r\n      </Helmet>\r\n      <h4 className=\"font-semibold text-2xl mb-3\">Edit Profile</h4>\r\n      <form\r\n        className=\"grid max-w-screen-sm gap-3 mt-5 w-full mb-5\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <input\r\n          ref={register({\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n          className=\"input\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          ref={register()}\r\n          className=\"input\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <Button\r\n          loading={loading}\r\n          canClick={formState.isValid}\r\n          actionText=\"Save Profile\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n",["147","148"],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\button.tsx",["149"],"import React from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => {\r\n  return (\r\n    <button\r\n      role=\"button\"\r\n      className={`text-lg font-medium text-white py-4  transition-colors focus:outline-none ${\r\n        canClick\r\n          ? \"bg-lime-600 hover:bg-lime-700\"\r\n          : \"bg-gray-300 pointer-events-none\"\r\n      }`}\r\n    >\r\n      {loading ? \"Loading...\" : actionText}\r\n    </button>\r\n  );\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\constants.ts",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\apollo.ts",[],["150","151"],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\create-account.tsx",["152","153","154","155","156","157"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport nuberLogo from \"../images/logo.svg\";\r\nimport {\r\n  createAccountMutation,\r\n  createAccountMutationVariables,\r\n} from \"../__generated__/createAccountMutation\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\n\r\nexport const CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    watch,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      role: UserRole.Client,\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok, error },\r\n    } = data;\r\n\r\n    if (ok) {\r\n      //redirect user to login page\r\n      alert(\"Account Created! Log in now!\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const [\r\n    createAccoutMutation,\r\n    { loading, error, data: createAccoutMutationResult },\r\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createAccoutMutation({\r\n        variables: {\r\n          createAccountInput: {\r\n            email,\r\n            password,\r\n            role,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col  mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Creact Account | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={nuberLogo} className=\"w-52 mb-5\" />\r\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\r\n          Let's get started\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-5 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            placeholder=\"Email\"\r\n            required\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\", minLength: 10 })}\r\n            placeholder=\"Password\"\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage={\"Password must be more than 10 chars.\"} />\r\n          )}\r\n          <select\r\n            name=\"role\"\r\n            ref={register({ required: true })}\r\n            className=\"input\"\r\n          >\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText=\"Create Account\"\r\n          />\r\n          {createAccoutMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccoutMutationResult.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\r\n            Login now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",["158","159"],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\category.tsx",["160","161","162"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { category, categoryVariables } from \"../../__generated__/category\";\r\n\r\nconst CATEGORY_QUERY = gql`\r\n  query category($input: CategoryInput!) {\r\n    category(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n      category {\r\n        ...CategoryParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${CATEGORY_FRAGMENT}\r\n`;\r\n\r\ninterface ICategoryParams {\r\n  slug: string;\r\n}\r\n\r\nexport const Category = () => {\r\n  /*\r\n  useParams를 이용해서 Router에서 :파라미터명 형태로 전달된 query parameter를 가져올 수 있음\r\n  */\r\n  const params = useParams<ICategoryParams>();\r\n  const { data, loading } = useQuery<category, categoryVariables>(\r\n    CATEGORY_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          slug: params.slug,\r\n        },\r\n      },\r\n    }\r\n  );\r\n\r\n  console.log(data);\r\n\r\n  return <h1>Category</h1>;\r\n};\r\n",["163","164"],"D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["165","166","167","168"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData, refetch } = useMe();\r\n\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n\r\n  const onCompleted = async (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n\r\n    if (ok && userData?.me.id) {\r\n      //await refetch();\r\n      /*\r\n        [Fragment]\r\n        Fragment를 사용하지 않고 Refetch를 사용하면 Backend에서 데이터를 새로 가져와서 Cache를 업데이트함\r\n        따라서 Fragment를 사용하는게 더 속도가 빠름\r\n\r\n        write data to cache directly through 'writeFragment'\r\n        fragment는 type의 일종임\r\n        id를 가지고 cache에 있는 fragment를 찾을 수 있음\r\n\r\n        아래 구문은 type이 User인 fragment중 id 가 User:${userData.me.id}인 것을 찾고\r\n        찾은 fragment의 데이터중 verified를 true로 바꾸는 내용임\r\n\r\n        (Chrome의 개발자 도구중 Apollo탭에서 cache로 가면 fragment들을 볼 수 있음)\r\n      */\r\n      client.writeFragment({\r\n        id: `User:${userData?.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Nuber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-700 text-sm\">\r\n        Please wait, don't close this page...\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["169","170","171"],"D:\\project_javascript\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\add-dish.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurant.tsx",["172","173"],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\restaurant.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\login.tsx",["174","175","176","177","178","179","180"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\r\nimport nuberLogo from \"../images/logo.svg\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\n\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: LoginInput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      error\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Login = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    watch,\r\n    formState,\r\n  } = useForm<ILoginForm>({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { error, ok, token },\r\n    } = data;\r\n\r\n    if (ok && token) {\r\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\r\n      authTokenVar(token);\r\n      isLoggedInVar(true);\r\n    }\r\n  };\r\n\r\n  const [\r\n    loginMutation,\r\n    { loading, error, data: loginMutationResult },\r\n  ] = useMutation<loginMutation, loginMutationVariables>(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  /*\r\n  //뮤테이션 선언 시 변수를 설정할 수도 있음. (watch는 react-hook-form에 있는 함수로, 변수의 변화가 발생할 때 알려줌)\r\n  const [loginMutation, { loading, error, data }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    variables: {\r\n      loginInput: {\r\n        email: watch(\"email\"),\r\n        password: watch(\"password\"),\r\n      },\r\n    },\r\n  });\r\n*/\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n\r\n      loginMutation({\r\n        variables: {\r\n          loginInput: {\r\n            email,\r\n            password,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  /*\r\n      handleSubmit은 form 입력값들이 유효할 경우 첫번째 인자로 전달받은 함수를\r\n      유효하지 않을 경우 두번째 인자로 전달받은 함수를 호출함\r\n    */\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col  mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Login | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={nuberLogo} className=\"w-52 mb-5\" />\r\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\r\n          Welcome back\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-5 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            placeholder=\"Email\"\r\n            required\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\", minLength: 10 })}\r\n            placeholder=\"Password\"\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage={\"Password must be more than 10 chars.\"} />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText=\"Log in\"\r\n          />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Nuber?{\" \"}\r\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\r\n            Create an Account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\dish.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\dish-option.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],{"ruleId":"181","severity":1,"message":"182","line":1,"column":15,"nodeType":"183","messageId":"184","endLine":1,"endColumn":30},{"ruleId":"181","severity":1,"message":"185","line":2,"column":17,"nodeType":"183","messageId":"184","endLine":2,"endColumn":26},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"181","severity":1,"message":"190","line":39,"column":31,"nodeType":"183","messageId":"184","endLine":39,"endColumn":36},{"ruleId":"181","severity":1,"message":"191","line":44,"column":44,"nodeType":"183","messageId":"184","endLine":44,"endColumn":48},{"ruleId":"181","severity":1,"message":"192","line":78,"column":38,"nodeType":"183","messageId":"184","endLine":78,"endColumn":45},{"ruleId":"181","severity":1,"message":"193","line":89,"column":5,"nodeType":"183","messageId":"184","endLine":89,"endColumn":11},{"ruleId":"186","replacedBy":"194"},{"ruleId":"188","replacedBy":"195"},{"ruleId":"181","severity":1,"message":"196","line":35,"column":12,"nodeType":"183","messageId":"184","endLine":35,"endColumn":13},{"ruleId":"197","severity":1,"message":"198","line":49,"column":6,"nodeType":"199","endLine":49,"endColumn":25,"suggestions":"200"},{"ruleId":"186","replacedBy":"201"},{"ruleId":"188","replacedBy":"202"},{"ruleId":"181","severity":1,"message":"203","line":26,"column":36,"nodeType":"183","messageId":"184","endLine":26,"endColumn":47},{"ruleId":"181","severity":1,"message":"190","line":31,"column":22,"nodeType":"183","messageId":"184","endLine":31,"endColumn":27},{"ruleId":"204","severity":1,"message":"205","line":109,"column":32,"nodeType":"206","messageId":"207","endLine":109,"endColumn":33,"suggestions":"208"},{"ruleId":"204","severity":1,"message":"205","line":109,"column":57,"nodeType":"206","messageId":"207","endLine":109,"endColumn":58,"suggestions":"209"},{"ruleId":"186","replacedBy":"210"},{"ruleId":"188","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":15,"column":5,"nodeType":"214","endLine":22,"endColumn":6},{"ruleId":"186","replacedBy":"215"},{"ruleId":"188","replacedBy":"216"},{"ruleId":"181","severity":1,"message":"217","line":36,"column":5,"nodeType":"183","messageId":"184","endLine":36,"endColumn":10},{"ruleId":"181","severity":1,"message":"190","line":48,"column":28,"nodeType":"183","messageId":"184","endLine":48,"endColumn":33},{"ruleId":"181","severity":1,"message":"190","line":60,"column":16,"nodeType":"183","messageId":"184","endLine":60,"endColumn":21},{"ruleId":"218","severity":1,"message":"219","line":89,"column":9,"nodeType":"214","endLine":89,"endColumn":54},{"ruleId":"204","severity":1,"message":"205","line":100,"column":34,"nodeType":"206","messageId":"207","endLine":100,"endColumn":35,"suggestions":"220"},{"ruleId":"204","severity":1,"message":"205","line":100,"column":59,"nodeType":"206","messageId":"207","endLine":100,"endColumn":60,"suggestions":"221"},{"ruleId":"186","replacedBy":"222"},{"ruleId":"188","replacedBy":"223"},{"ruleId":"181","severity":1,"message":"185","line":2,"column":17,"nodeType":"183","messageId":"184","endLine":2,"endColumn":26},{"ruleId":"181","severity":1,"message":"224","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":16},{"ruleId":"181","severity":1,"message":"192","line":36,"column":17,"nodeType":"183","messageId":"184","endLine":36,"endColumn":24},{"ruleId":"186","replacedBy":"225"},{"ruleId":"188","replacedBy":"226"},{"ruleId":"181","severity":1,"message":"227","line":2,"column":28,"nodeType":"183","messageId":"184","endLine":2,"endColumn":36},{"ruleId":"181","severity":1,"message":"228","line":21,"column":27,"nodeType":"183","messageId":"184","endLine":21,"endColumn":34},{"ruleId":"181","severity":1,"message":"196","line":70,"column":12,"nodeType":"183","messageId":"184","endLine":70,"endColumn":13},{"ruleId":"197","severity":1,"message":"229","line":78,"column":6,"nodeType":"199","endLine":78,"endColumn":8,"suggestions":"230"},{"ruleId":"181","severity":1,"message":"192","line":50,"column":11,"nodeType":"183","messageId":"184","endLine":50,"endColumn":18},{"ruleId":"181","severity":1,"message":"231","line":152,"column":22,"nodeType":"183","messageId":"184","endLine":152,"endColumn":24},{"ruleId":"181","severity":1,"message":"232","line":160,"column":42,"nodeType":"183","messageId":"184","endLine":160,"endColumn":54},{"ruleId":"181","severity":1,"message":"233","line":19,"column":3,"nodeType":"183","messageId":"184","endLine":19,"endColumn":13},{"ruleId":"181","severity":1,"message":"234","line":22,"column":3,"nodeType":"183","messageId":"184","endLine":22,"endColumn":13},{"ruleId":"181","severity":1,"message":"235","line":1,"column":10,"nodeType":"183","messageId":"184","endLine":1,"endColumn":21},{"ruleId":"181","severity":1,"message":"217","line":37,"column":5,"nodeType":"183","messageId":"184","endLine":37,"endColumn":10},{"ruleId":"181","severity":1,"message":"190","line":45,"column":16,"nodeType":"183","messageId":"184","endLine":45,"endColumn":21},{"ruleId":"181","severity":1,"message":"190","line":57,"column":16,"nodeType":"183","messageId":"184","endLine":57,"endColumn":21},{"ruleId":"218","severity":1,"message":"219","line":100,"column":9,"nodeType":"214","endLine":100,"endColumn":54},{"ruleId":"204","severity":1,"message":"205","line":111,"column":34,"nodeType":"206","messageId":"207","endLine":111,"endColumn":35,"suggestions":"236"},{"ruleId":"204","severity":1,"message":"205","line":111,"column":59,"nodeType":"206","messageId":"207","endLine":111,"endColumn":60,"suggestions":"237"},"@typescript-eslint/no-unused-vars","'useApolloClient' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-native-reassign",["238"],"no-negated-in-lhs",["239"],"'error' is assigned a value but never used.","'file' is assigned a value but never used.","'loading' is assigned a value but never used.","'errors' is assigned a value but never used.",["238"],["239"],"'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.","ArrayExpression",["240"],["238"],["239"],"'refreshUser' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["241","242"],["243","244"],["238"],["239"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["238"],["239"],"'watch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["245","246"],["247","248"],["238"],["239"],"'Helmet' is defined but never used.",["238"],["239"],"'useState' is defined but never used.","'refetch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.",["249"],"'ok' is assigned a value but never used.","'placingOrder' is assigned a value but never used.","'VictoryBar' is defined but never used.","'VictoryPie' is defined but never used.","'ApolloError' is defined but never used.",["250","251"],["252","253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"messageId":"256","fix":"257","desc":"258"},{"messageId":"259","fix":"260","desc":"261"},{"messageId":"256","fix":"262","desc":"258"},{"messageId":"259","fix":"263","desc":"261"},{"messageId":"256","fix":"264","desc":"258"},{"messageId":"259","fix":"265","desc":"261"},{"messageId":"256","fix":"266","desc":"258"},{"messageId":"259","fix":"267","desc":"261"},{"desc":"268","fix":"269"},{"messageId":"256","fix":"270","desc":"258"},{"messageId":"259","fix":"271","desc":"261"},{"messageId":"256","fix":"272","desc":"258"},{"messageId":"259","fix":"273","desc":"261"},"Update the dependencies array to be: [callQuery, history, location]",{"range":"274","text":"275"},"removeEscape",{"range":"276","text":"277"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"278","text":"279"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"280","text":"277"},{"range":"281","text":"279"},{"range":"282","text":"277"},{"range":"283","text":"279"},{"range":"284","text":"277"},{"range":"285","text":"279"},"Update the dependencies array to be: [verifyEmail]",{"range":"286","text":"287"},{"range":"288","text":"277"},{"range":"289","text":"279"},{"range":"290","text":"277"},{"range":"291","text":"279"},[1280,1299],"[callQuery, history, location]",[2835,2836],"",[2835,2835],"\\",[2860,2861],[2860,2860],[2641,2642],[2641,2641],[2666,2667],[2666,2666],[1963,1965],"[verifyEmail]",[2861,2862],[2861,2861],[2886,2887],[2886,2886]]