[{"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx":"1","D:\\project_javascript\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"2","D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx":"3","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx":"4","D:\\project_javascript\\nuber-eats-frontend\\src\\index.tsx":"5","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\header.tsx":"6","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"7","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\404.tsx":"8","D:\\project_javascript\\nuber-eats-frontend\\src\\hooks\\useMe.tsx":"9","D:\\project_javascript\\nuber-eats-frontend\\src\\fragments.ts":"10","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\form-error.tsx":"11","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\search.tsx":"12","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"13","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\button.tsx":"14","D:\\project_javascript\\nuber-eats-frontend\\src\\constants.ts":"15","D:\\project_javascript\\nuber-eats-frontend\\src\\apollo.ts":"16","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"17","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\category.tsx":"18","D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx":"19","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"20","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"21"},{"size":1752,"mtime":1615765054971,"results":"22","hashOfConfig":"23"},{"size":1270,"mtime":1615506762044,"results":"24","hashOfConfig":"23"},{"size":2390,"mtime":1615161037367,"results":"25","hashOfConfig":"23"},{"size":4828,"mtime":1615765690914,"results":"26","hashOfConfig":"23"},{"size":770,"mtime":1613690735085,"results":"27","hashOfConfig":"23"},{"size":1054,"mtime":1614901300008,"results":"28","hashOfConfig":"23"},{"size":4349,"mtime":1613603509598,"results":"29","hashOfConfig":"23"},{"size":644,"mtime":1613517341071,"results":"30","hashOfConfig":"23"},{"size":305,"mtime":1613951097421,"results":"31","hashOfConfig":"23"},{"size":652,"mtime":1613519461091,"results":"32","hashOfConfig":"23"},{"size":285,"mtime":1614123692957,"results":"33","hashOfConfig":"23"},{"size":1564,"mtime":1613518476186,"results":"34","hashOfConfig":"23"},{"size":3614,"mtime":1613517330402,"results":"35","hashOfConfig":"23"},{"size":566,"mtime":1614210032025,"results":"36","hashOfConfig":"23"},{"size":44,"mtime":1614294956804,"results":"37","hashOfConfig":"23"},{"size":1532,"mtime":1614901190603,"results":"38","hashOfConfig":"23"},{"size":4599,"mtime":1614640887879,"results":"39","hashOfConfig":"23"},{"size":1224,"mtime":1613603606876,"results":"40","hashOfConfig":"23"},{"size":594,"mtime":1613690601161,"results":"41","hashOfConfig":"23"},{"size":2560,"mtime":1613517334088,"results":"42","hashOfConfig":"23"},{"size":1500,"mtime":1613605787742,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"r4q80p",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx",["94","95"],"D:\\project_javascript\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx",["96","97","98","99"],"D:\\project_javascript\\nuber-eats-frontend\\src\\index.tsx",[],["100","101"],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\header.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\404.tsx",[],["102","103"],"D:\\project_javascript\\nuber-eats-frontend\\src\\hooks\\useMe.tsx",[],["104","105"],"D:\\project_javascript\\nuber-eats-frontend\\src\\fragments.ts",[],["106","107"],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\search.tsx",["108","109"],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",["110","111","112","113"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"../../components/button\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  editProfile,\r\n  editProfileVariables,\r\n} from \"../../__generated__/editProfile\";\r\n\r\nconst EDIT_PROFILE_MUTATION = gql`\r\n  mutation editProfile($input: EditProfileInput!) {\r\n    editProfile(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\ninterface IFormProps {\r\n  email?: string;\r\n  password?: string;\r\n}\r\n\r\nexport const EditProfile = () => {\r\n  const { data: userData, refetch: refreshUser } = useMe();\r\n  const client = useApolloClient();\r\n\r\n  const onCompleted = async (data: editProfile) => {\r\n    const {\r\n      editProfile: { error, ok },\r\n    } = data;\r\n\r\n    if (ok && userData) {\r\n      //await refreshUser();\r\n      //속도를 위해 Refetch대신 Fragment 사용하였음\r\n      const {\r\n        me: { email: prevEmail, id },\r\n      } = userData;\r\n      const { email: newEmail } = getValues();\r\n\r\n      if (prevEmail !== newEmail) {\r\n        //update the cache\r\n        /*\r\n        write data to cache directly through 'writeFragment'\r\n        fragment는 type의 일종임\r\n        id를 가지고 cache에 있는 fragment를 찾을 수 있음\r\n\r\n        아래 구문은 type이 User인 fragment중 id 가 User:${userData.me.id}인 것을 찾고\r\n        찾은 fragment의 데이터중 email을 바꾸는 내용임\r\n\r\n        (Chrome의 개발자 도구중 Apollo탭에서 cache로 가면 fragment들을 볼 수 있음)\r\n      */\r\n        client.writeFragment({\r\n          id: `User:${id}`,\r\n          fragment: gql`\r\n            fragment EditedUser on User {\r\n              verified\r\n              email\r\n            }\r\n          `,\r\n          data: {\r\n            verified: false,\r\n            email: newEmail,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const [editProfile, { loading }] = useMutation<\r\n    editProfile,\r\n    editProfileVariables\r\n  >(EDIT_PROFILE_MUTATION, {\r\n    onCompleted,\r\n  });\r\n\r\n  const { register, handleSubmit, getValues, formState } = useForm<IFormProps>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      email: userData?.me.email,\r\n    },\r\n  });\r\n  const onSubmit = () => {\r\n    const { email, password } = getValues();\r\n\r\n    editProfile({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          ...(password !== \"\" && { password }),\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-52 flex flex-col justify-center items-center\">\r\n      <Helmet>\r\n        <title>Edit Profile | Nuber Eats</title>\r\n      </Helmet>\r\n      <h4 className=\"font-semibold text-2xl mb-3\">Edit Profile</h4>\r\n      <form\r\n        className=\"grid max-w-screen-sm gap-3 mt-5 w-full mb-5\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <input\r\n          ref={register({\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n          className=\"input\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          ref={register()}\r\n          className=\"input\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <Button\r\n          loading={loading}\r\n          canClick={formState.isValid}\r\n          actionText=\"Save Profile\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\button.tsx",["114"],"import React from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => {\r\n  return (\r\n    <button\r\n      role=\"button\"\r\n      className={`text-lg font-medium text-white py-4  transition-colors focus:outline-none ${\r\n        canClick\r\n          ? \"bg-lime-600 hover:bg-lime-700\"\r\n          : \"bg-gray-300 pointer-events-none\"\r\n      }`}\r\n    >\r\n      {loading ? \"Loading...\" : actionText}\r\n    </button>\r\n  );\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\constants.ts",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\apollo.ts",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\create-account.tsx",["115","116","117","118","119","120"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport nuberLogo from \"../images/logo.svg\";\r\nimport {\r\n  createAccountMutation,\r\n  createAccountMutationVariables,\r\n} from \"../__generated__/createAccountMutation\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\n\r\nexport const CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    watch,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      role: UserRole.Client,\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok, error },\r\n    } = data;\r\n\r\n    if (ok) {\r\n      //redirect user to login page\r\n      alert(\"Account Created! Log in now!\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const [\r\n    createAccoutMutation,\r\n    { loading, error, data: createAccoutMutationResult },\r\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createAccoutMutation({\r\n        variables: {\r\n          createAccountInput: {\r\n            email,\r\n            password,\r\n            role,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col  mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Creact Account | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={nuberLogo} className=\"w-52 mb-5\" />\r\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\r\n          Let's get started\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-5 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            placeholder=\"Email\"\r\n            required\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\", minLength: 10 })}\r\n            placeholder=\"Password\"\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage={\"Password must be more than 10 chars.\"} />\r\n          )}\r\n          <select\r\n            name=\"role\"\r\n            ref={register({ required: true })}\r\n            className=\"input\"\r\n          >\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText=\"Create Account\"\r\n          />\r\n          {createAccoutMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccoutMutationResult.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\r\n            Login now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\category.tsx",["121","122","123"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { category, categoryVariables } from \"../../__generated__/category\";\r\n\r\nconst CATEGORY_QUERY = gql`\r\n  query category($input: CategoryInput!) {\r\n    category(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n      category {\r\n        ...CategoryParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${CATEGORY_FRAGMENT}\r\n`;\r\n\r\ninterface ICategoryParams {\r\n  slug: string;\r\n}\r\n\r\nexport const Category = () => {\r\n  /*\r\n  useParams를 이용해서 Router에서 :파라미터명 형태로 전달된 query parameter를 가져올 수 있음\r\n  */\r\n  const params = useParams<ICategoryParams>();\r\n  const { data, loading } = useQuery<category, categoryVariables>(\r\n    CATEGORY_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          slug: params.slug,\r\n        },\r\n      },\r\n    }\r\n  );\r\n\r\n  console.log(data);\r\n\r\n  return <h1>Category</h1>;\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["124","125","126","127"],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["128"],{"ruleId":"129","severity":1,"message":"130","line":1,"column":15,"nodeType":"131","messageId":"132","endLine":1,"endColumn":30},{"ruleId":"129","severity":1,"message":"133","line":2,"column":17,"nodeType":"131","messageId":"132","endLine":2,"endColumn":26},{"ruleId":"129","severity":1,"message":"134","line":39,"column":31,"nodeType":"131","messageId":"132","endLine":39,"endColumn":36},{"ruleId":"129","severity":1,"message":"135","line":44,"column":44,"nodeType":"131","messageId":"132","endLine":44,"endColumn":48},{"ruleId":"129","severity":1,"message":"136","line":78,"column":38,"nodeType":"131","messageId":"132","endLine":78,"endColumn":45},{"ruleId":"129","severity":1,"message":"137","line":89,"column":5,"nodeType":"131","messageId":"132","endLine":89,"endColumn":11},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"138","replacedBy":"144"},{"ruleId":"140","replacedBy":"145"},{"ruleId":"138","replacedBy":"146"},{"ruleId":"140","replacedBy":"147"},{"ruleId":"129","severity":1,"message":"148","line":35,"column":12,"nodeType":"131","messageId":"132","endLine":35,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":49,"column":6,"nodeType":"151","endLine":49,"endColumn":25,"suggestions":"152"},{"ruleId":"129","severity":1,"message":"153","line":26,"column":36,"nodeType":"131","messageId":"132","endLine":26,"endColumn":47},{"ruleId":"129","severity":1,"message":"134","line":31,"column":22,"nodeType":"131","messageId":"132","endLine":31,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":109,"column":32,"nodeType":"156","messageId":"157","endLine":109,"endColumn":33,"suggestions":"158"},{"ruleId":"154","severity":1,"message":"155","line":109,"column":57,"nodeType":"156","messageId":"157","endLine":109,"endColumn":58,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":15,"column":5,"nodeType":"162","endLine":22,"endColumn":6},{"ruleId":"129","severity":1,"message":"163","line":36,"column":5,"nodeType":"131","messageId":"132","endLine":36,"endColumn":10},{"ruleId":"129","severity":1,"message":"134","line":48,"column":28,"nodeType":"131","messageId":"132","endLine":48,"endColumn":33},{"ruleId":"129","severity":1,"message":"134","line":60,"column":16,"nodeType":"131","messageId":"132","endLine":60,"endColumn":21},{"ruleId":"164","severity":1,"message":"165","line":89,"column":9,"nodeType":"162","endLine":89,"endColumn":54},{"ruleId":"154","severity":1,"message":"155","line":100,"column":34,"nodeType":"156","messageId":"157","endLine":100,"endColumn":35,"suggestions":"166"},{"ruleId":"154","severity":1,"message":"155","line":100,"column":59,"nodeType":"156","messageId":"157","endLine":100,"endColumn":60,"suggestions":"167"},{"ruleId":"129","severity":1,"message":"133","line":2,"column":17,"nodeType":"131","messageId":"132","endLine":2,"endColumn":26},{"ruleId":"129","severity":1,"message":"168","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":16},{"ruleId":"129","severity":1,"message":"136","line":36,"column":17,"nodeType":"131","messageId":"132","endLine":36,"endColumn":24},{"ruleId":"129","severity":1,"message":"169","line":2,"column":28,"nodeType":"131","messageId":"132","endLine":2,"endColumn":36},{"ruleId":"129","severity":1,"message":"170","line":21,"column":27,"nodeType":"131","messageId":"132","endLine":21,"endColumn":34},{"ruleId":"129","severity":1,"message":"148","line":70,"column":12,"nodeType":"131","messageId":"132","endLine":70,"endColumn":13},{"ruleId":"149","severity":1,"message":"171","line":78,"column":6,"nodeType":"151","endLine":78,"endColumn":8,"suggestions":"172"},{"ruleId":"129","severity":1,"message":"136","line":29,"column":11,"nodeType":"131","messageId":"132","endLine":29,"endColumn":18},"@typescript-eslint/no-unused-vars","'useApolloClient' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'file' is assigned a value but never used.","'loading' is assigned a value but never used.","'errors' is assigned a value but never used.","no-native-reassign",["173"],"no-negated-in-lhs",["174"],["173"],["174"],["173"],["174"],["173"],["174"],"'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.","ArrayExpression",["175"],"'refreshUser' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["176","177"],["178","179"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'watch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["180","181"],["182","183"],"'Helmet' is defined but never used.","'useState' is defined but never used.","'refetch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"messageId":"187","fix":"188","desc":"189"},{"messageId":"190","fix":"191","desc":"192"},{"messageId":"187","fix":"193","desc":"189"},{"messageId":"190","fix":"194","desc":"192"},{"messageId":"187","fix":"195","desc":"189"},{"messageId":"190","fix":"196","desc":"192"},{"messageId":"187","fix":"197","desc":"189"},{"messageId":"190","fix":"198","desc":"192"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [callQuery, history, location]",{"range":"201","text":"202"},"removeEscape",{"range":"203","text":"204"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"205","text":"206"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"207","text":"204"},{"range":"208","text":"206"},{"range":"209","text":"204"},{"range":"210","text":"206"},{"range":"211","text":"204"},{"range":"212","text":"206"},"Update the dependencies array to be: [verifyEmail]",{"range":"213","text":"214"},[1280,1299],"[callQuery, history, location]",[2835,2836],"",[2835,2835],"\\",[2860,2861],[2860,2860],[2641,2642],[2641,2641],[2666,2667],[2666,2666],[1963,1965],"[verifyEmail]"]