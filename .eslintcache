[{"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx":"1","D:\\project_javascript\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts":"2","D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx":"3","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx":"4","D:\\project_javascript\\nuber-eats-frontend\\src\\index.tsx":"5","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\header.tsx":"6","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"7","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\404.tsx":"8","D:\\project_javascript\\nuber-eats-frontend\\src\\hooks\\useMe.tsx":"9","D:\\project_javascript\\nuber-eats-frontend\\src\\fragments.ts":"10","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\form-error.tsx":"11","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\search.tsx":"12","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"13","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\button.tsx":"14","D:\\project_javascript\\nuber-eats-frontend\\src\\constants.ts":"15","D:\\project_javascript\\nuber-eats-frontend\\src\\apollo.ts":"16","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\create-account.tsx":"17","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\category.tsx":"18","D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx":"19","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"20","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"21","D:\\project_javascript\\nuber-eats-frontend\\src\\reportWebVitals.ts":"22","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\add-dish.tsx":"23","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurant.tsx":"24","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\restaurant.tsx":"25","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\login.tsx":"26","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\dish.tsx":"27"},{"size":1752,"mtime":1615765054971,"results":"28","hashOfConfig":"29"},{"size":1692,"mtime":1616455097965,"results":"30","hashOfConfig":"29"},{"size":2642,"mtime":1616454941801,"results":"31","hashOfConfig":"29"},{"size":4828,"mtime":1615765690914,"results":"32","hashOfConfig":"29"},{"size":770,"mtime":1613690735085,"results":"33","hashOfConfig":"29"},{"size":1054,"mtime":1614901300008,"results":"34","hashOfConfig":"29"},{"size":4349,"mtime":1613603509598,"results":"35","hashOfConfig":"29"},{"size":644,"mtime":1613517341071,"results":"36","hashOfConfig":"29"},{"size":305,"mtime":1613951097421,"results":"37","hashOfConfig":"29"},{"size":652,"mtime":1613519461091,"results":"38","hashOfConfig":"29"},{"size":285,"mtime":1614123692957,"results":"39","hashOfConfig":"29"},{"size":1564,"mtime":1613518476186,"results":"40","hashOfConfig":"29"},{"size":3614,"mtime":1613517330402,"results":"41","hashOfConfig":"29"},{"size":566,"mtime":1614210032025,"results":"42","hashOfConfig":"29"},{"size":44,"mtime":1614294956804,"results":"43","hashOfConfig":"29"},{"size":1532,"mtime":1614901190603,"results":"44","hashOfConfig":"29"},{"size":4599,"mtime":1614640887879,"results":"45","hashOfConfig":"29"},{"size":1224,"mtime":1613603606876,"results":"46","hashOfConfig":"29"},{"size":594,"mtime":1613690601161,"results":"47","hashOfConfig":"29"},{"size":2560,"mtime":1613517334088,"results":"48","hashOfConfig":"29"},{"size":2029,"mtime":1616455415766,"results":"49","hashOfConfig":"29"},{"size":425,"mtime":1611290805718,"results":"50","hashOfConfig":"29"},{"size":5123,"mtime":1616023815974,"results":"51","hashOfConfig":"29"},{"size":3963,"mtime":1616369810246,"results":"52","hashOfConfig":"29"},{"size":730,"mtime":1616455011816,"results":"53","hashOfConfig":"29"},{"size":4650,"mtime":1614901163888,"results":"54","hashOfConfig":"29"},{"size":1167,"mtime":1616455845184,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"r4q80p",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx",["123","124"],"D:\\project_javascript\\nuber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-in-router.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx",["125","126","127","128"],"D:\\project_javascript\\nuber-eats-frontend\\src\\index.tsx",[],["129","130"],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\header.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],["131","132"],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\404.tsx",[],["133","134"],"D:\\project_javascript\\nuber-eats-frontend\\src\\hooks\\useMe.tsx",[],["135","136"],"D:\\project_javascript\\nuber-eats-frontend\\src\\fragments.ts",[],["137","138"],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\form-error.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\search.tsx",["139","140"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { gql, useLazyQuery } from \"@apollo/client\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  searchRestaurant,\r\n  searchRestaurantVariables,\r\n} from \"../../__generated__/searchRestaurant\";\r\n\r\nconst SEARCH_RESTAURANT = gql`\r\n  query searchRestaurant($input: SearchRestaurantInput!) {\r\n    searchRestaurant(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const Search = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [callQuery, { loading, data, called }] = useLazyQuery<\r\n    searchRestaurant,\r\n    searchRestaurantVariables\r\n  >(SEARCH_RESTAURANT);\r\n\r\n  useEffect(() => {\r\n    const [_, query] = location.search.split(\"?term=\");\r\n    if (!query) {\r\n      //history.push(\"/\");\r\n      //push와 다르게 replace는 history에 기록을 남기지 않음. 현재 페이지를 그냥 새로운 페이지로 대체해버림\r\n      return history.replace(\"/\");\r\n    }\r\n    callQuery({\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          query,\r\n        },\r\n      },\r\n    });\r\n  }, [history, location]);\r\n\r\n  console.log(loading, data, called);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Search | Nuber Eats</title>\r\n      </Helmet>\r\n      <h1>Search Page</h1>\r\n    </div>\r\n  );\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",["141","142","143","144"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"../../components/button\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  editProfile,\r\n  editProfileVariables,\r\n} from \"../../__generated__/editProfile\";\r\n\r\nconst EDIT_PROFILE_MUTATION = gql`\r\n  mutation editProfile($input: EditProfileInput!) {\r\n    editProfile(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\ninterface IFormProps {\r\n  email?: string;\r\n  password?: string;\r\n}\r\n\r\nexport const EditProfile = () => {\r\n  const { data: userData, refetch: refreshUser } = useMe();\r\n  const client = useApolloClient();\r\n\r\n  const onCompleted = async (data: editProfile) => {\r\n    const {\r\n      editProfile: { error, ok },\r\n    } = data;\r\n\r\n    if (ok && userData) {\r\n      //await refreshUser();\r\n      //속도를 위해 Refetch대신 Fragment 사용하였음\r\n      const {\r\n        me: { email: prevEmail, id },\r\n      } = userData;\r\n      const { email: newEmail } = getValues();\r\n\r\n      if (prevEmail !== newEmail) {\r\n        //update the cache\r\n        /*\r\n        write data to cache directly through 'writeFragment'\r\n        fragment는 type의 일종임\r\n        id를 가지고 cache에 있는 fragment를 찾을 수 있음\r\n\r\n        아래 구문은 type이 User인 fragment중 id 가 User:${userData.me.id}인 것을 찾고\r\n        찾은 fragment의 데이터중 email을 바꾸는 내용임\r\n\r\n        (Chrome의 개발자 도구중 Apollo탭에서 cache로 가면 fragment들을 볼 수 있음)\r\n      */\r\n        client.writeFragment({\r\n          id: `User:${id}`,\r\n          fragment: gql`\r\n            fragment EditedUser on User {\r\n              verified\r\n              email\r\n            }\r\n          `,\r\n          data: {\r\n            verified: false,\r\n            email: newEmail,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const [editProfile, { loading }] = useMutation<\r\n    editProfile,\r\n    editProfileVariables\r\n  >(EDIT_PROFILE_MUTATION, {\r\n    onCompleted,\r\n  });\r\n\r\n  const { register, handleSubmit, getValues, formState } = useForm<IFormProps>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      email: userData?.me.email,\r\n    },\r\n  });\r\n  const onSubmit = () => {\r\n    const { email, password } = getValues();\r\n\r\n    editProfile({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          ...(password !== \"\" && { password }),\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-52 flex flex-col justify-center items-center\">\r\n      <Helmet>\r\n        <title>Edit Profile | Nuber Eats</title>\r\n      </Helmet>\r\n      <h4 className=\"font-semibold text-2xl mb-3\">Edit Profile</h4>\r\n      <form\r\n        className=\"grid max-w-screen-sm gap-3 mt-5 w-full mb-5\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <input\r\n          ref={register({\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n          className=\"input\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          ref={register()}\r\n          className=\"input\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <Button\r\n          loading={loading}\r\n          canClick={formState.isValid}\r\n          actionText=\"Save Profile\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n",["145","146"],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\button.tsx",["147"],"import React from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => {\r\n  return (\r\n    <button\r\n      role=\"button\"\r\n      className={`text-lg font-medium text-white py-4  transition-colors focus:outline-none ${\r\n        canClick\r\n          ? \"bg-lime-600 hover:bg-lime-700\"\r\n          : \"bg-gray-300 pointer-events-none\"\r\n      }`}\r\n    >\r\n      {loading ? \"Loading...\" : actionText}\r\n    </button>\r\n  );\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\constants.ts",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\apollo.ts",[],["148","149"],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\create-account.tsx",["150","151","152","153","154","155"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport nuberLogo from \"../images/logo.svg\";\r\nimport {\r\n  createAccountMutation,\r\n  createAccountMutationVariables,\r\n} from \"../__generated__/createAccountMutation\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\n\r\nexport const CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    watch,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      role: UserRole.Client,\r\n    },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok, error },\r\n    } = data;\r\n\r\n    if (ok) {\r\n      //redirect user to login page\r\n      alert(\"Account Created! Log in now!\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const [\r\n    createAccoutMutation,\r\n    { loading, error, data: createAccoutMutationResult },\r\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    {\r\n      onCompleted,\r\n    }\r\n  );\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createAccoutMutation({\r\n        variables: {\r\n          createAccountInput: {\r\n            email,\r\n            password,\r\n            role,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col  mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Creact Account | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={nuberLogo} className=\"w-52 mb-5\" />\r\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\r\n          Let's get started\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-5 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            placeholder=\"Email\"\r\n            required\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\", minLength: 10 })}\r\n            placeholder=\"Password\"\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage={\"Password must be more than 10 chars.\"} />\r\n          )}\r\n          <select\r\n            name=\"role\"\r\n            ref={register({ required: true })}\r\n            className=\"input\"\r\n          >\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText=\"Create Account\"\r\n          />\r\n          {createAccoutMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccoutMutationResult.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/\" className=\"text-lime-600 hover:underline\">\r\n            Login now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\category.tsx",["156","157","158"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { category, categoryVariables } from \"../../__generated__/category\";\r\n\r\nconst CATEGORY_QUERY = gql`\r\n  query category($input: CategoryInput!) {\r\n    category(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n      category {\r\n        ...CategoryParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${CATEGORY_FRAGMENT}\r\n`;\r\n\r\ninterface ICategoryParams {\r\n  slug: string;\r\n}\r\n\r\nexport const Category = () => {\r\n  /*\r\n  useParams를 이용해서 Router에서 :파라미터명 형태로 전달된 query parameter를 가져올 수 있음\r\n  */\r\n  const params = useParams<ICategoryParams>();\r\n  const { data, loading } = useQuery<category, categoryVariables>(\r\n    CATEGORY_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          slug: params.slug,\r\n        },\r\n      },\r\n    }\r\n  );\r\n\r\n  console.log(data);\r\n\r\n  return <h1>Category</h1>;\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["159","160","161","162"],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["163"],"D:\\project_javascript\\nuber-eats-frontend\\src\\reportWebVitals.ts",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\add-dish.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\owner\\my-restaurant.tsx",["164","165"],"D:\\project_javascript\\nuber-eats-frontend\\src\\components\\restaurant.tsx",[],"D:\\project_javascript\\nuber-eats-frontend\\src\\pages\\login.tsx",["166","167","168","169","170","171","172"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authTokenVar, isLoggedInVar } from \"../apollo\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\r\nimport nuberLogo from \"../images/logo.svg\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\n\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: LoginInput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      error\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Login = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    watch,\r\n    formState,\r\n  } = useForm<ILoginForm>({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { error, ok, token },\r\n    } = data;\r\n\r\n    if (ok && token) {\r\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\r\n      authTokenVar(token);\r\n      isLoggedInVar(true);\r\n    }\r\n  };\r\n\r\n  const [\r\n    loginMutation,\r\n    { loading, error, data: loginMutationResult },\r\n  ] = useMutation<loginMutation, loginMutationVariables>(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  /*\r\n  //뮤테이션 선언 시 변수를 설정할 수도 있음. (watch는 react-hook-form에 있는 함수로, 변수의 변화가 발생할 때 알려줌)\r\n  const [loginMutation, { loading, error, data }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    variables: {\r\n      loginInput: {\r\n        email: watch(\"email\"),\r\n        password: watch(\"password\"),\r\n      },\r\n    },\r\n  });\r\n*/\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n\r\n      loginMutation({\r\n        variables: {\r\n          loginInput: {\r\n            email,\r\n            password,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  /*\r\n      handleSubmit은 form 입력값들이 유효할 경우 첫번째 인자로 전달받은 함수를\r\n      유효하지 않을 경우 두번째 인자로 전달받은 함수를 호출함\r\n    */\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col  mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Login | Nuber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={nuberLogo} className=\"w-52 mb-5\" />\r\n        <h4 className=\"w-full font-medium text-left text-3xl mb-5\">\r\n          Welcome back\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-5 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            placeholder=\"Email\"\r\n            required\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\", minLength: 10 })}\r\n            placeholder=\"Password\"\r\n            required\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage={\"Password must be more than 10 chars.\"} />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText=\"Log in\"\r\n          />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Nuber?{\" \"}\r\n          <Link to=\"/create-account\" className=\"text-lime-600 hover:underline\">\r\n            Create an Account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\project_javascript\\nuber-eats-frontend\\src\\components\\dish.tsx",[],{"ruleId":"173","severity":1,"message":"174","line":1,"column":15,"nodeType":"175","messageId":"176","endLine":1,"endColumn":30},{"ruleId":"173","severity":1,"message":"177","line":2,"column":17,"nodeType":"175","messageId":"176","endLine":2,"endColumn":26},{"ruleId":"173","severity":1,"message":"178","line":39,"column":31,"nodeType":"175","messageId":"176","endLine":39,"endColumn":36},{"ruleId":"173","severity":1,"message":"179","line":44,"column":44,"nodeType":"175","messageId":"176","endLine":44,"endColumn":48},{"ruleId":"173","severity":1,"message":"180","line":78,"column":38,"nodeType":"175","messageId":"176","endLine":78,"endColumn":45},{"ruleId":"173","severity":1,"message":"181","line":89,"column":5,"nodeType":"175","messageId":"176","endLine":89,"endColumn":11},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"182","replacedBy":"186"},{"ruleId":"184","replacedBy":"187"},{"ruleId":"182","replacedBy":"188"},{"ruleId":"184","replacedBy":"189"},{"ruleId":"182","replacedBy":"190"},{"ruleId":"184","replacedBy":"191"},{"ruleId":"182","replacedBy":"192"},{"ruleId":"184","replacedBy":"193"},{"ruleId":"173","severity":1,"message":"194","line":35,"column":12,"nodeType":"175","messageId":"176","endLine":35,"endColumn":13},{"ruleId":"195","severity":1,"message":"196","line":49,"column":6,"nodeType":"197","endLine":49,"endColumn":25,"suggestions":"198"},{"ruleId":"173","severity":1,"message":"199","line":26,"column":36,"nodeType":"175","messageId":"176","endLine":26,"endColumn":47},{"ruleId":"173","severity":1,"message":"178","line":31,"column":22,"nodeType":"175","messageId":"176","endLine":31,"endColumn":27},{"ruleId":"200","severity":1,"message":"201","line":109,"column":32,"nodeType":"202","messageId":"203","endLine":109,"endColumn":33,"suggestions":"204"},{"ruleId":"200","severity":1,"message":"201","line":109,"column":57,"nodeType":"202","messageId":"203","endLine":109,"endColumn":58,"suggestions":"205"},{"ruleId":"182","replacedBy":"206"},{"ruleId":"184","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":15,"column":5,"nodeType":"210","endLine":22,"endColumn":6},{"ruleId":"182","replacedBy":"211"},{"ruleId":"184","replacedBy":"212"},{"ruleId":"173","severity":1,"message":"213","line":36,"column":5,"nodeType":"175","messageId":"176","endLine":36,"endColumn":10},{"ruleId":"173","severity":1,"message":"178","line":48,"column":28,"nodeType":"175","messageId":"176","endLine":48,"endColumn":33},{"ruleId":"173","severity":1,"message":"178","line":60,"column":16,"nodeType":"175","messageId":"176","endLine":60,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":89,"column":9,"nodeType":"210","endLine":89,"endColumn":54},{"ruleId":"200","severity":1,"message":"201","line":100,"column":34,"nodeType":"202","messageId":"203","endLine":100,"endColumn":35,"suggestions":"216"},{"ruleId":"200","severity":1,"message":"201","line":100,"column":59,"nodeType":"202","messageId":"203","endLine":100,"endColumn":60,"suggestions":"217"},{"ruleId":"173","severity":1,"message":"177","line":2,"column":17,"nodeType":"175","messageId":"176","endLine":2,"endColumn":26},{"ruleId":"173","severity":1,"message":"218","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":16},{"ruleId":"173","severity":1,"message":"180","line":36,"column":17,"nodeType":"175","messageId":"176","endLine":36,"endColumn":24},{"ruleId":"173","severity":1,"message":"219","line":2,"column":28,"nodeType":"175","messageId":"176","endLine":2,"endColumn":36},{"ruleId":"173","severity":1,"message":"220","line":21,"column":27,"nodeType":"175","messageId":"176","endLine":21,"endColumn":34},{"ruleId":"173","severity":1,"message":"194","line":70,"column":12,"nodeType":"175","messageId":"176","endLine":70,"endColumn":13},{"ruleId":"195","severity":1,"message":"221","line":78,"column":6,"nodeType":"197","endLine":78,"endColumn":8,"suggestions":"222"},{"ruleId":"173","severity":1,"message":"180","line":34,"column":11,"nodeType":"175","messageId":"176","endLine":34,"endColumn":18},{"ruleId":"173","severity":1,"message":"223","line":19,"column":3,"nodeType":"175","messageId":"176","endLine":19,"endColumn":13},{"ruleId":"173","severity":1,"message":"224","line":22,"column":3,"nodeType":"175","messageId":"176","endLine":22,"endColumn":13},{"ruleId":"173","severity":1,"message":"225","line":1,"column":10,"nodeType":"175","messageId":"176","endLine":1,"endColumn":21},{"ruleId":"173","severity":1,"message":"213","line":37,"column":5,"nodeType":"175","messageId":"176","endLine":37,"endColumn":10},{"ruleId":"173","severity":1,"message":"178","line":45,"column":16,"nodeType":"175","messageId":"176","endLine":45,"endColumn":21},{"ruleId":"173","severity":1,"message":"178","line":57,"column":16,"nodeType":"175","messageId":"176","endLine":57,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":100,"column":9,"nodeType":"210","endLine":100,"endColumn":54},{"ruleId":"200","severity":1,"message":"201","line":111,"column":34,"nodeType":"202","messageId":"203","endLine":111,"endColumn":35,"suggestions":"226"},{"ruleId":"200","severity":1,"message":"201","line":111,"column":59,"nodeType":"202","messageId":"203","endLine":111,"endColumn":60,"suggestions":"227"},"@typescript-eslint/no-unused-vars","'useApolloClient' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'file' is assigned a value but never used.","'loading' is assigned a value but never used.","'errors' is assigned a value but never used.","no-native-reassign",["228"],"no-negated-in-lhs",["229"],["228"],["229"],["228"],["229"],["228"],["229"],["228"],["229"],"'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.","ArrayExpression",["230"],"'refreshUser' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["231","232"],["233","234"],["228"],["229"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["228"],["229"],"'watch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["235","236"],["237","238"],"'Helmet' is defined but never used.","'useState' is defined but never used.","'refetch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.",["239"],"'VictoryBar' is defined but never used.","'VictoryPie' is defined but never used.","'ApolloError' is defined but never used.",["240","241"],["242","243"],"no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"messageId":"246","fix":"247","desc":"248"},{"messageId":"249","fix":"250","desc":"251"},{"messageId":"246","fix":"252","desc":"248"},{"messageId":"249","fix":"253","desc":"251"},{"messageId":"246","fix":"254","desc":"248"},{"messageId":"249","fix":"255","desc":"251"},{"messageId":"246","fix":"256","desc":"248"},{"messageId":"249","fix":"257","desc":"251"},{"desc":"258","fix":"259"},{"messageId":"246","fix":"260","desc":"248"},{"messageId":"249","fix":"261","desc":"251"},{"messageId":"246","fix":"262","desc":"248"},{"messageId":"249","fix":"263","desc":"251"},"Update the dependencies array to be: [callQuery, history, location]",{"range":"264","text":"265"},"removeEscape",{"range":"266","text":"267"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"268","text":"269"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"270","text":"267"},{"range":"271","text":"269"},{"range":"272","text":"267"},{"range":"273","text":"269"},{"range":"274","text":"267"},{"range":"275","text":"269"},"Update the dependencies array to be: [verifyEmail]",{"range":"276","text":"277"},{"range":"278","text":"267"},{"range":"279","text":"269"},{"range":"280","text":"267"},{"range":"281","text":"269"},[1280,1299],"[callQuery, history, location]",[2835,2836],"",[2835,2835],"\\",[2860,2861],[2860,2860],[2641,2642],[2641,2641],[2666,2667],[2666,2666],[1963,1965],"[verifyEmail]",[2861,2862],[2861,2861],[2886,2887],[2886,2886]]